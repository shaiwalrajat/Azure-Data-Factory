{
	"name": "df016Join",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DF_Sales_Join",
						"type": "DatasetReference"
					},
					"name": "ReadSales"
				},
				{
					"dataset": {
						"referenceName": "DF_Product_join",
						"type": "DatasetReference"
					},
					"name": "ReadProducts"
				},
				{
					"dataset": {
						"referenceName": "DF_Coustome_Join",
						"type": "DatasetReference"
					},
					"name": "ReadCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DF_Join",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "joinProduct"
				},
				{
					"name": "joinCustomer"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductKey as short,",
				"          CustomerKey as short,",
				"          SalesAmount as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadSales",
				"source(output(",
				"          ProductKey as short,",
				"          EnglishProductName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadProducts",
				"source(output(",
				"          CustomerKey as short,",
				"          FullName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadCustomer",
				"ReadSales, ReadProducts join(ReadSales@ProductKey == ReadProducts@ProductKey,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinProduct",
				"joinProduct, ReadCustomer join(ReadSales@CustomerKey == ReadCustomer@CustomerKey,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCustomer",
				"joinCustomer sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductKey = ReadSales@ProductKey,",
				"          CustomerKey = ReadSales@CustomerKey,",
				"          SalesAmount,",
				"          EnglishProductName,",
				"          FullName",
				"     )) ~> sink1"
			]
		}
	}
}